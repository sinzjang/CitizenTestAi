#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
эЮМыФФьЦ┤ эЕМьЭ┤ы╕Ф ьИШьаХ - ыИДыЭ╜ыРЬ ьзИым╕ ь╢Фъ░А
"""

import csv
from pathlib import Path

def fix_hindi_table():
    """ыИДыЭ╜ыРЬ ьзИым╕ыУдьЭД ьИШыПЩьЬ╝ыбЬ ьИШьаХ"""
    
    script_dir = Path(__file__).parent
    project_dir = script_dir.parent
    data_dir = project_dir / 'data'
    
    # эММьЭ╝ ьЭ╜ъ╕░
    table_file = data_dir / 'script_work' / '2025_CitizenTest_128 - Hindi_Table.csv'
    english_file = data_dir / 'Completed' / 'Complete_128_Questions - English.csv'
    
    print(f"ЁЯУЦ эЮМыФФьЦ┤ эЕМьЭ┤ы╕Ф ьЭ╜ъ╕░...")
    with open(table_file, 'r', encoding='utf-8') as f:
        reader = csv.DictReader(f)
        rows = list(reader)
    
    print(f"ЁЯУЦ ьШБьЦ┤ CSV ьЭ╜ъ╕░...")
    english_data = {}
    with open(english_file, 'r', encoding='utf-8') as f:
        reader = csv.DictReader(f)
        for row in reader:
            english_data[int(row['Index'])] = row
    
    # ьИШыПЩ ьИШьаХьЭ┤ эХДьЪФэХЬ ым╕ьаЬыУд
    manual_fixes = {
        97: {
            'Question_HI': 'рдХреМрди рд╕рд╛ рд╕рдВрд╢реЛрдзрди рдХрд╣рддрд╛ рд╣реИ рдХрд┐ рд╕рдВрдпреБрдХреНрдд рд░рд╛рдЬреНрдп рдЕрдореЗрд░рд┐рдХрд╛ рдореЗрдВ рдкреИрджрд╛ рд╣реБрдП рдпрд╛ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рднреА рд╡реНрдпрдХреНрддрд┐, рдФрд░ рдЗрд╕рдХреЗ рдЕрдзрд┐рдХрд╛рд░ рдХреНрд╖реЗрддреНрд░ рдХреЗ рдЕрдзреАрди, рдЕрдореЗрд░рд┐рдХреА рдирд╛рдЧрд░рд┐рдХ рд╣реИрдВ?',
            'Answers_EN': '14th Amendment',
            'Answers_HI': '14рд╡рд╛рдВ рд╕рдВрд╢реЛрдзрди'
        },
        101: {
            'Question_HI': 'рдЕрдореЗрд░рд┐рдХрд╛ рдиреЗрдкреНрд░рдердо рд╡рд┐рд╢реНрд╡ рдпреБрджреНрдз рдореЗрдВрднрд╛рдЧ рдХреНрдпреЛрдВ рд▓рд┐рдпрд╛ рдерд╛?',
            'Answers_HI': 'рдХреНрдпреЛрдВрдХрд┐ рдЬрд░реНрдордиреА рдиреЗ рдЕрдореЗрд░рд┐рдХреА (рдирд╛рдЧрд░рд┐рдХ) рдЬрд╣рд╛рдЬреЛрдВ рдкрд░ рд╣рдорд▓рд╛ рдХрд┐рдпрд╛ рдерд╛, рдорд┐рддреНрд░ рд░рд╛рд╖реНрдЯреНрд░реЛрдВ (рдЗрдВрдЧреНрд▓реИрдВрдб, рдлреНрд░рд╛рдВрд╕, рдЗрдЯрд▓реА рдФрд░ рд░реВрд╕) рдХрд╛ рд╕рдорд░реНрдерди рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП, рдХреЗрдВрджреНрд░реАрдп рд╢рдХреНрддрд┐рдпреЛрдВ (рдЬрд░реНрдордиреА, рдСрд╕реНрдЯреНрд░рд┐рдпрд╛-рд╣рдВрдЧрд░реА, рдУрдЯреЛрдорди рд╕рд╛рдореНрд░рд╛рдЬреНрдп рдФрд░ рдмреБрд▓реНрдЧрд╛рд░рд┐рдпрд╛) рдХрд╛ рд╡рд┐рд░реЛрдз рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП'
        },
        117: {
            'Question_HI': 'рд╕рдВрдпреБрдХреНрдд рд░рд╛рдЬреНрдп рдЕрдореЗрд░рд┐рдХрд╛ рдореЗрдВрдПрдХ рдЕрдореЗрд░рд┐рдХреА рднрд╛рд░рддреАрдп рдЬрдирдЬрд╛рддрд┐ рдХрд╛ рдирд╛рдо.',
            'Answers_HI': 'Apache, Blackfeet, Cayuga, Cherokee, Cheyenne, Chippewa, Choctaw, Creek, Crow, Hopi, Huron, Inupiat, Lakota, Mohawk, Mohegan, Navajo, Oneida, Onondaga, Pueblo, Seminole, Seneca, Shawnee, Sioux, Teton, Tuscarora'
        }
    }
    
    # ьИШьаХ ьаБьЪй
    for row in rows:
        index = int(row['Index'])
        
        # ьШБьЦ┤ ьзИым╕/ыЛ╡ы│АьЭ┤ ьЧЖьЬ╝ый┤ ьШБьЦ┤ CSVьЧРьДЬ ъ░Аьа╕ьШдъ╕░
        if not row['Question_EN'].strip() and index in english_data:
            row['Question_EN'] = english_data[index]['Questions']
            row['Answers_EN'] = english_data[index]['Answers']
            print(f"  ЁЯФз ым╕ьаЬ {index}: ьШБьЦ┤ ьзИым╕/ыЛ╡ы│А ь╢Фъ░А")
        
        # ьИШыПЩ ьИШьаХ
        if index in manual_fixes:
            print(f"  ЁЯФз ым╕ьаЬ {index}: эЮМыФФьЦ┤ ьзИым╕/ыЛ╡ы│А ьИШьаХ")
            for key, value in manual_fixes[index].items():
                row[key] = value
    
    # ьаАьЮе
    output_file = data_dir / 'script_work' / '2025_CitizenTest_128 - Hindi_Table_Fixed.csv'
    with open(output_file, 'w', encoding='utf-8', newline='') as f:
        fieldnames = ['Index', 'Category_EN', 'SubCategory_EN', 'Category_HI', 'SubCategory_HI',
                      'Question_EN', 'Answers_EN', 'Question_HI', 'Answers_HI']
        writer = csv.DictWriter(f, fieldnames=fieldnames)
        writer.writeheader()
        writer.writerows(rows)
    
    print(f"\nтЬЕ ьИШьаХ ьЩДыгМ: {output_file.name}")
    
    # ъ▓АьжЭ
    empty_q_hi = [r['Index'] for r in rows if not r['Question_HI'].strip()]
    empty_a_hi = [r['Index'] for r in rows if not r['Answers_HI'].strip()]
    empty_q_en = [r['Index'] for r in rows if not r['Question_EN'].strip()]
    empty_a_en = [r['Index'] for r in rows if not r['Answers_EN'].strip()]
    
    if empty_q_hi:
        print(f"тЪая╕П  ьЧмьаДэЮИ ы╣И эЮМыФФьЦ┤ ьзИым╕: {empty_q_hi}")
    else:
        print(f"тЬЕ ыкиыУа ым╕ьаЬьЧР эЮМыФФьЦ┤ ьзИым╕ьЭ┤ ьЮИьК╡ыЛИыЛд!")
    
    if empty_a_hi:
        print(f"тЪая╕П  ьЧмьаДэЮИ ы╣И эЮМыФФьЦ┤ ыЛ╡ы│А: {empty_a_hi}")
    else:
        print(f"тЬЕ ыкиыУа ым╕ьаЬьЧР эЮМыФФьЦ┤ ыЛ╡ы│АьЭ┤ ьЮИьК╡ыЛИыЛд!")
    
    if not empty_q_en and not empty_a_en and not empty_q_hi and not empty_a_hi:
        print(f"\nтЬЕтЬЕтЬЕ ьЩДы▓╜эХйыЛИыЛд! ыкиыУа 128ъ░Ь ым╕ьаЬьЧР ьзИым╕ъ│╝ ыЛ╡ы│АьЭ┤ ьЮИьК╡ыЛИыЛд! тЬЕтЬЕтЬЕ")
    
    return rows

def main():
    print("=" * 60)
    print("ЁЯОп эЮМыФФьЦ┤ эЕМьЭ┤ы╕Ф ьИШьаХ")
    print("=" * 60)
    
    rows = fix_hindi_table()
    
    print("\n" + "=" * 60)
    print("ЁЯОЙ ьИШьаХ ьЩДыгМ!")
    print("=" * 60)

if __name__ == "__main__":
    main()
