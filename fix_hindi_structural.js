const fs = require('fs');

// эММьЭ╝ ъ▓╜ыбЬ
const englishFilePath = './data/interview_questions_en.json';
const hindiFilePath = './data/interview_questions_hi.json';

console.log('=== Hindi эММьЭ╝ ъ╡мьб░ьаБ ым╕ьаЬ ьИШьаХ ===\n');

// ыВаьзЬ эМиэД┤ьЭД ьЭ╕ьЛЭэХШьЧм ь╜дызИые╝ ьаЬьЩ╕эХШыКФ ьКдызИэК╕ ь╣┤ьЪ┤эМЕ эХиьИШ
function countOptionsSmartly(text) {
  if (!text) return 0;
  
  // ыВаьзЬ эМиэД┤ыУд (ьШБьЦ┤ьЩА эЮМыФФьЦ┤)
  const datePatterns = [
    /\b\w+\s+\d{1,2},\s+\d{4}\b/g,  // "Month DD, YYYY"
    /\b\d{1,2}\s+\w+,\s+\d{4}\b/g,  // Hindi: "DD Month, YYYY"
    /\b\d{1,2}\s+\w+\s+\d{4}\b/g,   // Hindi without comma: "DD Month YYYY"
  ];
  
  let processedText = text;
  
  // ыВаьзЬ эМиэД┤ ыВ┤ьЭШ ь╜дызИые╝ ьЮДьЛЬыбЬ ыЛдые╕ ым╕ьЮРыбЬ ыМАь▓┤
  datePatterns.forEach(pattern => {
    processedText = processedText.replace(pattern, (match) => {
      return match.replace(/,/g, '|COMMA|');
    });
  });
  
  // ыВиьЭА ь╜дызИьЭШ ъ░ЬьИШые╝ ьД╕ьЦ┤ ьШ╡ьЕШ ъ░ЬьИШ ъ│ДьВ░
  const commaCount = (processedText.match(/,/g) || []).length;
  return commaCount + 1;
}

// Hindi ьШдыЛ╡ эЕЬэФМыж┐ ьГЭьД▒ эХиьИШ
function generateHindiWrongAnswers(correctCount) {
  const templates = {
    1: [
      "рдЧрд▓рдд рдЙрддреНрддрд░",
      "рдЧрд▓рдд рдЬрд╛рдирдХрд╛рд░реА", 
      "рд╕рд╣реА рдирд╣реАрдВ рд╣реИ"
    ],
    2: [
      "рдЧрд▓рдд рдЙрддреНрддрд░, рдЧрд▓рдд рдЬрд╛рдирдХрд╛рд░реА",
      "рд╕рд╣реА рдирд╣реАрдВ рд╣реИ, рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк",
      "рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк, рдЧрд▓рдд рдЙрддреНрддрд░"
    ],
    3: [
      "рдЧрд▓рдд рдЙрддреНрддрд░, рдЧрд▓рдд рдЬрд╛рдирдХрд╛рд░реА, рд╕рд╣реА рдирд╣реАрдВ рд╣реИ",
      "рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк, рдЧрд▓рдд рдЙрддреНрддрд░, рдЧрд▓рдд рдЬрд╛рдирдХрд╛рд░реА",
      "рд╕рд╣реА рдирд╣реАрдВ рд╣реИ, рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк, рдЧрд▓рдд рдЙрддреНрддрд░"
    ],
    4: [
      "рдЧрд▓рдд рдЙрддреНрддрд░, рдЧрд▓рдд рдЬрд╛рдирдХрд╛рд░реА, рд╕рд╣реА рдирд╣реАрдВ рд╣реИ, рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк",
      "рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк, рдЧрд▓рдд рдЙрддреНрддрд░, рдЧрд▓рдд рдЬрд╛рдирдХрд╛рд░реА, рд╕рд╣реА рдирд╣реАрдВ рд╣реИ",
      "рд╕рд╣реА рдирд╣реАрдВ рд╣реИ, рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк, рдЧрд▓рдд рдЙрддреНрддрд░, рдЧрд▓рдд рдЬрд╛рдирдХрд╛рд░реА"
    ],
    5: [
      "рдЧрд▓рдд рдЙрддреНрддрд░, рдЧрд▓рдд рдЬрд╛рдирдХрд╛рд░реА, рд╕рд╣реА рдирд╣реАрдВ рд╣реИ, рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк, рдЧрд▓рдд рддрдереНрдп",
      "рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк, рдЧрд▓рдд рдЙрддреНрддрд░, рдЧрд▓рдд рдЬрд╛рдирдХрд╛рд░реА, рд╕рд╣реА рдирд╣реАрдВ рд╣реИ, рдЧрд▓рдд рддрдереНрдп",
      "рд╕рд╣реА рдирд╣реАрдВ рд╣реИ, рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк, рдЧрд▓рдд рдЙрддреНрддрд░, рдЧрд▓рдд рдЬрд╛рдирдХрд╛рд░реА, рдЧрд▓рдд рддрдереНрдп"
    ]
  };
  
  return templates[correctCount] || templates[1];
}

try {
  const englishData = JSON.parse(fs.readFileSync(englishFilePath, 'utf8'));
  const hindiData = JSON.parse(fs.readFileSync(hindiFilePath, 'utf8'));
  
  // ьШБьЦ┤ ыН░ьЭ┤эД░ые╝ IDыбЬ ыздэХС
  const englishMap = {};
  englishData.forEach(q => {
    englishMap[q.id] = q;
  });
  
  let fixedCount = 0;
  const fixedQuestions = [];
  
  hindiData.forEach((question, index) => {
    const englishQ = englishMap[question.id];
    if (!englishQ) return;
    
    const correctCount = englishQ.correctAnswers.length;
    let hasProblems = false;
    
    // ъ░Б ьШдыЛ╡ ъ▓АьВм
    question.wrongAnswers.forEach((wrongAnswer, waIndex) => {
      const text = wrongAnswer.text_hi || wrongAnswer.text;
      const optionCount = countOptionsSmartly(text);
      
      if (optionCount !== correctCount) {
        hasProblems = true;
      }
    });
    
    if (hasProblems) {
      // ьГИыбЬьЪ┤ ьШдыЛ╡ ьГЭьД▒
      const newWrongAnswers = generateHindiWrongAnswers(correctCount);
      
      question.wrongAnswers = question.wrongAnswers.map((wrongAnswer, waIndex) => {
        return {
          ...wrongAnswer,
          text_hi: newWrongAnswers[waIndex] || newWrongAnswers[0],
          rationale_hi: `рд╕рд╣реА рдЙрддреНрддрд░ рдореЗрдВ ${correctCount} рднрд╛рдЧ рд╣реЛрдиреЗ рдЪрд╛рд╣рд┐рдПред рдпрд╣ рдЙрддреНрддрд░ рдЕрдзреВрд░рд╛ рдпрд╛ рдЧрд▓рдд рд╣реИред`
        };
      });
      
      fixedCount++;
      fixedQuestions.push(question.id);
      
      console.log(`тЬЕ ьзИым╕ ${question.id} ьИШьаХ ьЩДыгМ (${correctCount}ъ░Ь ьШ╡ьЕШ эХДьЪФ)`);
    }
  });
  
  // ьИШьаХыРЬ ыН░ьЭ┤эД░ ьаАьЮе
  fs.writeFileSync(hindiFilePath, JSON.stringify(hindiData, null, 2), 'utf8');
  
  console.log(`\n=== ьИШьаХ ьЩДыгМ ===`);
  console.log(`ь┤Э ьИШьаХыРЬ ьзИым╕: ${fixedCount}ъ░Ь`);
  console.log(`ьИШьаХыРЬ ьзИым╕ ID: ${fixedQuestions.join(', ')}`);
  
  if (fixedCount > 0) {
    console.log('\nЁЯОЙ Hindi эММьЭ╝ьЭШ ъ╡мьб░ьаБ ым╕ьаЬъ░А ьД▒ъ│╡ьаБьЬ╝ыбЬ ьИШьаХыРШьЧИьК╡ыЛИыЛд!');
    console.log('ьЭ┤ьаЬ ъ▓АьжЭ ьКдэБмыж╜эК╕ые╝ ьЛдэЦЙэХШьЧм эЩХьЭ╕эХ┤ы│┤ьД╕ьЪФ.');
  }
  
} catch (error) {
  console.error('тЭМ ьШдыеШ ы░ЬьГЭ:', error.message);
}
